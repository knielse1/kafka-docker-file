# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# see kafka.server.KafkaConfig for additional details and defaults

############################# Server Basics #############################

# The id of the broker. This must be set to a unique integer for each broker.
broker.id=0


############################# Socket Server Settings ##########################$

# The address the socket server listens on. It will get the value returned from
# java.net.InetAddress.getCanonicalHostName() if not configured.
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
#listeners=PLAINTEXT://:9092

# Hostname and port the broker will advertise to producers and consumers. If no$
# it uses the value for "listeners" if configured.  Otherwise, it will use the $
# returned from java.net.InetAddress.getCanonicalHostName().
#advertised.listeners=PLAINTEXT://your.host.name:9092

# Maps listener names to security protocols, the default is for them to be the $
#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL$

# The number of threads that the server uses for receiving requests from the ne$
num.network.threads=3

# The number of threads that the server uses for processing requests, which may$
num.io.threads=8

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection $
socket.request.max.bytes=104857600


############################# Log Basics #############################

# A comma separated list of directories under which to store log files
log.dirs=/tmp/kafka-logs

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions=1

# The number of threads per data directory to be used for log recovery at start$
# This value is recommended to be increased for installations with data dirs lo$
num.recovery.threads.per.data.dir=1

######## Zookeeper #############################

# Zookeeper connection string (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
zookeeper.connect=localhost:2181

# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=6000

############################# Group Coordinator Settings ######################$

# The following configuration specifies the time, in milliseconds, that the Gro$
# The rebalance will be further delayed by the value of group.initial.rebalance$
# The default value for this is 3 seconds.
# We override this to 0 here as it makes for a better out-of-the-box experience$
# However, in production environments the default value of 3 seconds is more su$
group.initial.rebalance.delay.ms=0









# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
#zookeeper.connect=localhost:2181
#port=9092
#advertised.listeners=PLAINTEXT://kafka-docker-file-dev-environment.235-365-38-9b22f2.cor00005.cna.ukcloud.com:9092
# Timeout in ms for connecting to zookeeper
#zookeeper.connection.timeout.ms=6000
#listeners=PLAINTEXT://0.0.0.0:9093
#listeners=PLAINTEXT://kafka-docker-file-dev-environment.235-365-38-9b22f2.cor00005.cna.ukcloud.com:9092
#listeners=PLAINTEXT://172.31.63.203:9092
#advertised.listeners=PLAINTEXT://kafka-docker-file-dev-environment.235-365-38-9b22f2.cor00005.cna.ukcloud.com:9092
#advertised.listeners=PLAINTEXT://54.173.215.211:9092
#zookeeper.connect=52.91.1.93:2181
#listeners=PLAINTEXT://localhost:9092
#listeners=PLAINTEXT://10.21.191.207:9092
#listeners=PLAINTEXT://LAMU02S49TFG8WP:9092